name: Build Cross-Platform Executables

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Clean previous builds
        run: |
          if (Test-Path -Path "build") { Remove-Item -Recurse -Force "build" }
          if (Test-Path -Path "dist") { Remove-Item -Recurse -Force "dist" }

      - name: Build Windows executable
        run: |
          pyinstaller app.spec

      - name: Store Windows executable
        run: |
          mkdir -p build/windows || exit 0
          move dist\my_app.exe build\windows\my_app.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: build/windows/my_app.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Clean previous builds
        run: rm -rf build/ dist/

      - name: Build Linux executable
        run: |
          pyinstaller app.spec

      - name: List files in dist directory
        run: ls -R dist/

      - name: Store Linux executable
        run: |
          mkdir -p build/linux
          if [ -d "dist/my_app" ]; then mv dist/my_app/* build/linux/; else mv dist/my_app build/linux/; fi

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-executable
          path: build/linux/
